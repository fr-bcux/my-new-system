// apps/storybook/.storybook/main.ts

import type { StorybookConfig } from '@storybook/web-components-vite';
// ðŸ’¡ NEW IMPORTS: Required for the viteFinal function
import { join, dirname } from "path"
import { mergeConfig, defineConfig } from 'vite'; 

/**
* This function is used to resolve the absolute path of a package.
* It is needed in projects that use Yarn PnP or are set up within a monoreo.
*/
function getAbsolutePath(value: string): any {
Â  return dirname(require.resolve(join(value, 'package.json')))
}

const config: StorybookConfig = {
Â  "stories": [
Â  Â  "../../../packages/core/src/**/*.stories.@(js|jsx|mjs|ts|tsx)"
Â  ],
Â  "addons": [
Â  Â  getAbsolutePath('@storybook/addon-docs'),
Â  Â  getAbsolutePath("@storybook/addon-a11y"),
Â  Â  getAbsolutePath("@storybook/addon-vitest")
Â  ],
Â  "framework": {
Â  Â  "name": getAbsolutePath('@storybook/web-components-vite'),
Â  Â  "options": {}
Â  },

Â  // ðŸš€ NEW FIX: Add the viteFinal function to configure Vite
Â  async viteFinal(config, { configType }) {
Â  Â  // Merge the existing Storybook/Vite config with our custom settings
Â  Â  return mergeConfig(config, {
Â  Â  Â  // CRITICAL FIX for monorepos: Force Vite to process files from the linked tokens package
Â  Â  Â  optimizeDeps: {
Â  Â  Â  Â  // ðŸš¨ REPLACE '@your-org/tokens' with the exact name of your tokens package
Â  Â  Â  Â  // This ensures the CSS is found and processed.
Â  Â  Â  Â  include: ['@your-org/tokens'], 
Â  Â  Â  },
Â  Â  } as defineConfig); // Use 'as defineConfig' for TypeScript
Â  },
};

export default config;
